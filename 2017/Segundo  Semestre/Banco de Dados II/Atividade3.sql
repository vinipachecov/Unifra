-- (1) Para atualizar o subtotal de uma venda ou compra toda vez que um item seja inserido, atualizado ou excluído.
--(2)Para atualizar o número de compras ou vendas sempre após finalizar as mesmas.
--(3)Para atualizar o estoque toda vez que uma compra ou venda for finalizada.
--Crie os campos necessários (faltantes).
--Crie trigger(s) para situações semelhantes.

--(1) Cada vez que eu insiro uma compra eu busco o produto, calculo o total


--Item Compra


CREATE TRIGGER T_SBUTOTAL_COMPRA FOR ITEMCOMPRA
ACTIVE AFTER INSERT OR UPDATE POSITION 5
AS
BEGIN
	UPDATE COMPRA C
	SET C.SUBTOTAL = C.SUBTOTAL + NEW.TOTAL
	WHERE C.CODIGO = NEW.CODCOMPRA;		
END

DROP TRIGGER T_SBUTOTAL_COMPRA

--teste

SELECT * FROM COMPRA;

SELECT * FROM ITEMCOMPRA;

INSERT INTO ITEMCOMPRA ( CODPRODUTO,CODCOMPRA,TOTAL,QUANTIDADE)
VALUES
(5,2,1500,10);

DELETE FROM ITEMCOMPRA 
WHERE CODPRODUTO = 5;

----------------------------------------

--Item Venda

CREATE TRIGGER T_SBUTOTAL_VENDA FOR ITEMVENDA
ACTIVE AFTER INSERT OR UPDATE POSITION 5
AS
BEGIN
	UPDATE	VENDA V
	SET V.SUBTOTAL = V.SUBTOTAL + NEW.TOTAL
	WHERE V.CODIGO  = NEW.CODVENDA;		
END	


DROP TRIGGER T_SBUTOTAL_VENDA;
--TESTE

SELECT * FROM VENDA;

SELECT * FROM ITEMVENDA;

DELETE FROM ITEMVENDA
WHERE ITEMVENDA.CODVENDA = 3;

INSERT INTO ITEMVENDA(CODPRODUTO,CODVENDA,TOTAL,QUANTIDADE)
VALUES
(5,3,150000,1000);


-- Para atualizar o número de compras ou vendas sempre após finalizar as mesmas.
-- Criar atributo para contar as vendas g_inc ou mais uma coluna em alguma tabela
--(2) Criar um atributo finalizada do tipo char

ALTER TABLE VENDA ADD FINALIZADA D_FINALIZADA;
ALTER TABLE COMPRA ADD FINALIZADA D_FINALIZADA;

DROP TRIGGER T_TOTAL_COMPRAS;

CREATE TRIGGER T_TOTAL_COMPRAS FOR COMPRA
ACTIVE AFTER INSERT OR UPDATE POSITION 5
AS
	DECLARE VARIABLE TCOMPRAS INT;	
BEGIN
	IF((NEW.FINALIZADA = 'S') OR (NEW.FINALIZADA != 'S'))THEN
	SELECT COUNT(C.CODIGOFORNECEDOR)
	FROM COMPRA C
	WHERE C.CODIGOFORNECEDOR = NEW.CODIGOFORNECEDOR AND C.FINALIZADA = 'S'
	INTO :TCOMPRAS;	

	UPDATE FORNECEDOR F
	SET F.NUMEROCOMPRAS = :TCOMPRAS
	WHERE F.CODIGO = NEW.CODIGOFORNECEDOR;			
END

DROP TRIGGER T_TOTAL_VENDAS;

SET term ^;
CREATE TRIGGER T_TOTAL_VENDAS FOR VENDA
ACTIVE AFTER INSERT OR UPDATE POSITION 5
AS
	DECLARE VARIABLE TVENDAS INT;	
BEGIN	
	-- verificar se uma conta teve finalização alterada S para Sim e N para Não
	IF((NEW.FINALIZADA = 'S') OR (NEW.FINALIZADA = 'N'))THEN
		-- Calcula o total de compras finalizadas
		SELECT COUNT(V.CODCLIENTE)
		FROM VENDA V
		WHERE V.CODCLIENTE = NEW.CODCLIENTE AND V.FINALIZADA = 'S'
		INTO :TVENDAS;
	
		UPDATE CLIENTE C
		SET C.NUMEROVENDAS = :TVENDAS
		WHERE C.CODIGO = NEW.CODCLIENTE;		
END
SET term ;^

SELECT * FROM VENDA;


SELECT * FROM CLIENTE;

-- (3) Atualizar o estoque

-- Compra

DROP TRIGGER T_ATU_ESTOQUE_IV;

set term ^;
CREATE TRIGGER T_ATU_ESTOQUE_IV FOR COMPRA
ACTIVE AFTER UPDATE POSITION 5
AS
	DECLARE VARIABLE IDP INT;
	DECLARE VARIABLE QTD INT;
BEGIN
	IF((NEW.FINALIZADA = 'S') AND (NEW.FINALIZADA <> OLD.FINALIZADA))THEN
	BEGIN
		FOR SELECT IV.CODPRODUTO, IV.QUANTIDADE
		FROM ITEMCOMPRA IV
		WHERE IV.CODCOMPRA = NEW.CODIGO
		INTO :IDP,:QTD		
		DO BEGIN
			UPDATE PRODUTO P 
			SET P.QUANTIDADEATUAL = P.QUANTIDADEATUAL + :QTD
			WHERE P.CODIGO = :IDP;			
		END				 
	END 
END
set term ;^ 		

--Venda
DROP TRIGGER T_ATU_ESTOQUE_V;

set term ^;
CREATE TRIGGER T_ATU_ESTOQUE_V FOR VENDA
ACTIVE AFTER UPDATE POSITION 5
AS
	DECLARE VARIABLE IDP INT;
	DECLARE VARIABLE QTD INT;
BEGIN
	IF((NEW.FINALIZADA = 'S') AND (NEW.FINALIZADA <> OLD.FINALIZADA))THEN
	BEGIN
		FOR SELECT IV.CODPRODUTO, IV.QUANTIDADE
		FROM ITEMVENDA IV
		WHERE IV.CODVENDA = NEW.CODIGO
		INTO :IDP,:QTD		
		DO BEGIN
			UPDATE PRODUTO P 
			SET P.QUANTIDADEATUAL = P.QUANTIDADEATUAL - :QTD
			WHERE P.CODIGO = :IDP;			
		END				 
	END 
END
set term ;^

-------------------------------------------
