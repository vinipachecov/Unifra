/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automatocelulartempo;

/**
 *
 * @author root
 */
public class ConfigMatrix extends javax.swing.JFrame {
    Matrix mat;
    View view;
    /**
     * Creates new form ConfigMatrix
     */
    
    public ConfigMatrix(int dim, View view) {
        
        initComponents();
        this.setTitle("Configurar Matriz do Inicial");        
        mat = new Matrix(dim,dim, view,this);
        this.view = view;
        DesenhaMatrix(dim,dim);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newMatrixbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newMatrixbutton.setText("Retornar Matriz");
        newMatrixbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMatrixbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newMatrixbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(366, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newMatrixbutton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 502, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newMatrixbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMatrixbuttonActionPerformed
        // TODO add your handling code here:
     //   view.setMatrix(mat);
        this.setVisible(false);
    }//GEN-LAST:event_newMatrixbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void updateMatrix(){
        for (int i = 0; i < mat.getLins(); i++) {
            for (int j = 0; j < mat.getCols(); j++) {
                this.remove(mat.getCell(i, j));
            }            
        }        
        DesenhaMatrix(mat.getLins(), mat.getCols());
    }
    
    public void DesenhaMatrix(int lins, int cols){        
        // blocos de 40x40                
        for (int i = 0; i < lins; i++) {
            for (int j = 0; j < cols; j++) {                
                this.add(mat.getCell(i, j));                                
            }            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton newMatrixbutton;
    // End of variables declaration//GEN-END:variables
}
