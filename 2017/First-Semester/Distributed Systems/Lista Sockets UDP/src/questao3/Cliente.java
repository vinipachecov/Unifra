package questao3;


import com.sun.glass.events.KeyEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;

/* Resolução da questao 3 :

3)
(0.4) Faça uma aplicação cliente-servidor em que o servidor mantem uma lista 
de produtos e seus respectivos preços. Os clientes então começam a enviar para 
o servidor vários datagramas indicando suas vendas, com mensagens no formato:  
<identificador_do_cliente>:<nome_do_produto>:<quantidade_vendida>

Ex:

1:Farinha de Trigo:20

2:Leite:30

2:Batata:15

1:Azeite:20

1:Batata:30

O servidor ficará recebendo mensagens de vários clientes e ir calculando o 
quanto cada um vendeu. Quando os clientes terminarem de enviar ao servidor os 
datagramas dos produtos vendidos, eles enviam uma mensagem indicando que 
finalizou o envio com o texto “<identificador_do_cliente>:LISTAGEM FINALIZADA”. 
O servidor, ao identificar que recebeu a mensagem de finalização, deve enviar 
a esse cliente uma mensagem indicando o valor total das vendas.


*/

public class Cliente extends javax.swing.JFrame {

    DatagramSocket socket = null;
    String ID;

    public Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFIp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFPorta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAChat = new javax.swing.JTextArea();
        jTFMensagem = new javax.swing.JTextField();
        jBtnEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("IP:");

        jTFIp.setText("localhost");
        jTFIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFIpActionPerformed(evt);
            }
        });

        jLabel2.setText("Porta:");

        jTFPorta.setText("1234");

        jButton1.setText("Conectar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTAChat.setColumns(20);
        jTAChat.setRows(5);
        jScrollPane1.setViewportView(jTAChat);

        jTFMensagem.setEnabled(false);
        jTFMensagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFMensagemKeyPressed(evt);
            }
        });

        jBtnEnviar.setText("Enviar");
        jBtnEnviar.setEnabled(false);
        jBtnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jTFIp, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jTFPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTFMensagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEnviar))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTFPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEnviar)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ID = UUID.randomUUID().toString();
        try {
            if (socket == null) {
                socket = new DatagramSocket();
            }
            //monta uma mensagem de conexão
            String mensagem = "CONNECT";
            sendMessage(mensagem);

            //receive menu of products 
            new Thread() {
                public void run() {
                    try {
                        while (true) {
                            //instanciar um pacote datagrama "vazio" de até 10 0bytes
                            DatagramPacket pacoteRecebido = new DatagramPacket(new byte[200], 200);
                            //servidor começa a aguardar mensagens pela rede por referência
                            socket.receive(pacoteRecebido);
                            //retiramos do pacote os bytes da mensagem
                            byte buffer[] = pacoteRecebido.getData();
                            //convertemos os bytes em string
                            String mensagemRecebida = new String(buffer, 0, pacoteRecebido.getLength());
                            //adiciona no textArea a mensagemRecebida
                            jTAChat.append(mensagemRecebida + "\n");
                            //autoscroll
                            jTAChat.setCaretPosition(jTAChat.getDocument().getLength());
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }.start();

            //habilita os componentes da interface gráfica
            jBtnEnviar.setEnabled(true);
            jTFMensagem.setEnabled(true);
        } catch (SocketException ex) {
            jTAChat.append("Não foi possível criar o socket do cliente\n");
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void sendMessage(String mensagemEnviar) {
        String ipEnviar = jTFIp.getText();            
        if(!mensagemEnviar.equals("CONNECT")){            
            mensagemEnviar = ID + ":" + jTFMensagem.getText();
        }        
        
        int portaEnviar = Integer.parseInt(jTFPorta.getText());
        try {
            //monto um pacote datagrama para enviar
            DatagramPacket pacoteEnviar = new DatagramPacket(
                    mensagemEnviar.getBytes(),
                    mensagemEnviar.getBytes().length,
                    InetAddress.getByName(ipEnviar),
                    portaEnviar);
            //envia para o servidor
            socket.send(pacoteEnviar);
        } catch (UnknownHostException ex) {
            jTAChat.append("Destinatário desconhecido\n");
        } catch (IOException ex) {
            jTAChat.append("Erro na hora de enviar o pacote\n");
        }
    }
    private void jBtnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEnviarActionPerformed
        String mensagemEnviar = jTFMensagem.getText();
        sendMessage(mensagemEnviar);
        jTFMensagem.setText("");
    }//GEN-LAST:event_jBtnEnviarActionPerformed

    private void jTFMensagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFMensagemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String mensagemEnviar =  ID + ":"+ jTFMensagem.getText();            
            sendMessage(mensagemEnviar);
            jTFMensagem.setText("");
        }
    }//GEN-LAST:event_jTFMensagemKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String mensagemEnviar = "DISCONNECT:";
        sendMessage(mensagemEnviar);
        socket.close();
    }//GEN-LAST:event_formWindowClosing

    private void jTFIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFIpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFIpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnEnviar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTAChat;
    private javax.swing.JTextField jTFIp;
    private javax.swing.JTextField jTFMensagem;
    private javax.swing.JTextField jTFPorta;
    // End of variables declaration//GEN-END:variables
}
