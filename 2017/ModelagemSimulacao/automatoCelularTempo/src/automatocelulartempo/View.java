/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automatocelulartempo;

import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class View extends javax.swing.JFrame {    
    Matrix mat;
    public int cont_geracao;
    private MatrixImagePanel matrixpanel;  
    public MatrixEstados test;
    public int dim;
    /**
     * Creates new form gameofLife
     */
    public View() {
        this.setTitle("Game of Life");
        initComponents();
        
        cont_geracao = 0;
        contGeracaoLabel.setText("Geração: " + cont_geracao);
     
//        int dim = Integer.parseInt(JOptionPane.showInputDialog(null,
//                "Insira a dimensao da matriz"));        
        dim = 42;
        mat = new Matrix(dim,dim, this);       
        
        mat.printStates();
                        
        
        layerpanel.remove(mapars);
    
        DesenhaMatriz(dim,dim);
        layerpanel.add(mapars);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        rulesPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        contGeracaoLabel = new javax.swing.JLabel();
        newGenerationButton = new javax.swing.JToggleButton();
        newMatrix = new javax.swing.JButton();
        layerpanel = new javax.swing.JLayeredPane();
        mapars = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));

        jLabel3.setText("Regras");

        jLabel2.setText("Se uma célula não tiver vizinhos vivos, ela mantêm o estado.");

        jLabel1.setText("Se uma célula tiver um vizinho vivo, ela nasce ou segue viva.");

        jLabel4.setText("Se uma célula tiver dois vizinho vivo, ela nasce ou segue viva.");

        jLabel5.setText("S.e uma célula tiver dois ou mais vizinhos vivo, ela morre por superpopulação");

        contGeracaoLabel.setText("Geração");

        newGenerationButton.setText("Nova Geração");
        newGenerationButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGenerationButtonMouseClicked(evt);
            }
        });

        newMatrix.setText("Configurar Matriz");
        newMatrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newMatrixMouseClicked(evt);
            }
        });
        newMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMatrixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rulesPanelLayout = new javax.swing.GroupLayout(rulesPanel);
        rulesPanel.setLayout(rulesPanelLayout);
        rulesPanelLayout.setHorizontalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(rulesPanelLayout.createSequentialGroup()
                        .addComponent(contGeracaoLabel)
                        .addGap(71, 71, 71)
                        .addComponent(newGenerationButton)
                        .addGap(18, 18, 18)
                        .addComponent(newMatrix)))
                .addContainerGap(381, Short.MAX_VALUE))
        );
        rulesPanelLayout.setVerticalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(23, 23, 23)
                .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contGeracaoLabel)
                    .addComponent(newGenerationButton)
                    .addComponent(newMatrix)))
        );

        layerpanel.setBackground(new java.awt.Color(215, 220, 225));
        layerpanel.setForeground(new java.awt.Color(220, 220, 220));

        mapars.setIcon(new javax.swing.ImageIcon("/home/vinipachecov/Repos/Unifra/2017/ModelagemSimulacao/maparsBW.png")); // NOI18N

        layerpanel.setLayer(mapars, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layerpanelLayout = new javax.swing.GroupLayout(layerpanel);
        layerpanel.setLayout(layerpanelLayout);
        layerpanelLayout.setHorizontalGroup(
            layerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 908, Short.MAX_VALUE)
            .addGroup(layerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layerpanelLayout.createSequentialGroup()
                    .addComponent(mapars, javax.swing.GroupLayout.PREFERRED_SIZE, 908, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layerpanelLayout.setVerticalGroup(
            layerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
            .addGroup(layerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapars, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 711, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(layerpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(layerpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rulesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGenerationButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGenerationButtonMouseClicked
        // TODO add your handling code here:
        //        
        //update matrix (remove older to replace for the newer)
      this.mat.newGeneration();      
      mat.printStates();
      this.newGenerationButton.setSelected(false);
      
      
//      
        //layerpanel.remove(mapars);
//    
        //DesenhaMatriz(dim,dim);
        //layerpanel.add(mapars);
        this.repaint();        
        contGeracaoLabel.setText("Geração " + ++cont_geracao);
        
        
    }//GEN-LAST:event_newGenerationButtonMouseClicked

    private void newMatrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newMatrixMouseClicked
        // TODO add your handling code here:
        removeMatrix();
        
        
    }//GEN-LAST:event_newMatrixMouseClicked

    private void newMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMatrixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newMatrixActionPerformed

    /**
     * @param args the command line arguments
     */
//    
//    public void setMatrix(Matrix newMat){
//        removeMatrix();   
//        mat = newMat;
//        newGenerationButton.setEnabled(true);
//        //disableClick();             
//        DesenhaMatriz(mat.getLins(), mat.getCols());
//        mat.printStates();
//    }
//    
    
    
//    public void newGeneration(){
//          if(mat != null){
//            for (int i = 0; i < mat.getLins(); i++) {
//                for (int j = 0; j < mat.getCols(); j++) {
//                    //this.remove(mat.getCell(i, j));
//                    painelMatrix.remove(mat.getCell(i,j));
//                }                
//            }
//        }        
//        mat = mat.newGeneration(this);
//        DesenhaMatriz(mat.getLins(), mat.getCols());
//        newGenerationButton.setSelected(false);
//        cont_geracao++;
//        contGeracaoLabel.setText("Geração: " + cont_geracao);        
//    }
    
//     public void newGenerationInserted(int i , int j){
//         
//         
//        //remove cells from GUI
//        for (int k = 0; k < mat.getLins(); k++) {
//            for (int l = 0; l < mat.getCols(); l++) {                
//                painelMatrix.remove(mat.getCell(i,j));
//            }                
//        }
//
//        //check if clicked block has to change it's state
//        // if it's alive keep alive
//        // if it's dead switch to FrankenAlive         
////        
//        if(!mat.mat[i][j].getState()){
//            System.out.println("Modificou o i = " + i + " j = " + j );
//            mat.mat[i][j] = new Automaton(i,j,!mat.mat[i][j].getState(),this);
//            System.out.println("Nova matriz com o automato clicado alterado");    
//            mat.printStates();
//        }
//                    
//        mat = mat.newGeneration(this);
//                
//        DesenhaMatriz(mat.getLins(), mat.getCols());
//        this.repaint();
//        newGenerationButton.setSelected(false);
//        cont_geracao++;
//        contGeracaoLabel.setText("Geração: " + cont_geracao);        
//    }
//     
    public void removeMatrix(){
        for (int k = 0; k < mat.getLins(); k++) {
            for (int l = 0; l < mat.getCols(); l++) {                
                layerpanel.removeAll();
            }                
        }     
    }
//    
    public void DesenhaMatriz(int lins, int cols){        
        // blocos de 40x40                
//        for (int i = 0; i < lins; i++) {
//            for (int j = 0; j < cols; j++) {                                
//                this.add(mat.getCell(i, j));                
//            }            
//        }
        for (int i = 0; i < lins; i++) {
            for (int j = 0; j < cols; j++) {                                
                layerpanel.add(mat.getCell(i, j), 2);                
            }            
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contGeracaoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLayeredPane layerpanel;
    private javax.swing.JLabel mapars;
    private javax.swing.JToggleButton newGenerationButton;
    private javax.swing.JButton newMatrix;
    private javax.swing.JPanel rulesPanel;
    // End of variables declaration//GEN-END:variables
}
